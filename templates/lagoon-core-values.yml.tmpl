elasticsearchURL: https://none.com
harborURL: "https://none.com"
harborAdminPassword: none
kibanaURL: https://none.com
logsDBAdminPassword: none
s3FilesAccessKeyID: none
s3FilesBucket: none
s3FilesHost: none
s3FilesSecretAccessKey: none
s3FilesRegion: none
s3BAASAccessKeyID: none
s3BAASSecretAccessKey: none
imageTag: v2.5.0
registry: none.com

keycloakAPIURL: http://keycloak.{{ .LagoonBaseUrl }}/auth
lagoonAPIURL: http://api.{{ .LagoonBaseUrl }}/graphql
lagoonUIURL: http://ui.{{ .LagoonBaseUrl }}
api:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: api.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: api-tls
        hosts:
          - api.{{ .LagoonBaseUrl }} */}}

keycloak:
  {{- if eq .Arch "arm64" }}
  image:
    repository: ghcr.io/yusufhm/rockpool/lagoon-keycloak-arm
  {{- end }}
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: keycloak.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: keycloak-tls
        hosts:
          - keycloak.{{ .LagoonBaseUrl }} */}}

webhookHandler:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: webhookhandler.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: webhookhandler-tls
        hosts:
          - webhookhandler.{{ .LagoonBaseUrl }} */}}

ui:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: ui.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: ui-tls
        hosts:
          - ui.{{ .LagoonBaseUrl }} */}}

backupHandler:
  enabled: false
  {{/* ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: backuphandler.{{ .LagoonBaseUrl }}
      paths:
      - /
    tls:
      - secretName: backuphandler-tls
        hosts:
          - backuphandler.{{ .LagoonBaseUrl }} */}}

drushAlias:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: drushalias.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: drushalias-tls
        hosts:
          - drushalias.{{ .LagoonBaseUrl }} */}}

ssh:
  service:
    type: LoadBalancer
    port: 22

broker:
  {{- if eq .Arch "arm64" }}
  image:
    repository: ghcr.io/yusufhm/rockpool/lagoon-broker
  {{- end }}
  service:
    amqpExternal:
      enabled: true
  serviceMonitor:
    enabled: false
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: broker.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: broker-tls
        hosts:
          - broker.{{ .LagoonBaseUrl }} */}}

webhookHandler:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: webhookhandler.{{ .LagoonBaseUrl }}
      paths:
      - /
    {{/* tls:
      - secretName: webhookhandler-tls
        hosts:
          - webhookhandler.{{ .LagoonBaseUrl }} */}}

logs2slack:
  enabled: false
logs2microsoftteams:
  enabled: false
logs2rocketchat:
  enabled: false
logs2email:
  enabled: false
logs2s3:
  enabled: false
