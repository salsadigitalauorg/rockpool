elasticsearchURL: https://none.com
harborURL: "https://harbor.lagoon.{{ .Hostname }}"
kibanaURL: https://none.com
logsDBAdminPassword: none
s3FilesAccessKeyID: none
s3FilesBucket: none
s3FilesHost: none
s3FilesSecretAccessKey: none
s3FilesRegion: none
s3BAASAccessKeyID: none
s3BAASSecretAccessKey: none
imageTag: {{ .LagoonVersion }}
registry: "harbor.lagoon.{{ .Hostname }}"

keycloakAPIURL: http://keycloak.lagoon.{{ .Hostname }}/auth
lagoonAPIURL: http://api.lagoon.{{ .Hostname }}/graphql
lagoonUIURL: http://ui.lagoon.{{ .Hostname }}

harborAdminPassword: pass
keycloakAdminPassword: pass
keycloakLagoonAdminPassword: pass
rabbitMQPassword: pass

api:
  replicaCount: 1
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: api.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: api-tls
        hosts:
          - api.lagoon.{{ .Hostname }} */}}

keycloak:
  {{- if eq .Arch "arm64" }}
  image:
    repository: ghcr.io/salsadigitalauorg/rockpool/lagoon/keycloak
  {{- end }}
  resources:
    requests:
      memory: "512Mi"
      cpu: "1000m"
    limits:
      memory: "1536Mi"
      cpu: "1500m"
  additionalEnvs:
    JAVA_OPTS: >
      -server -Xms512m -Xmx1536m -XX:MetaspaceSize=96M
      -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
      -Djboss.modules.system.pkgs=org.jboss.byteman
      -Djava.awt.headless=true
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: keycloak.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: keycloak-tls
        hosts:
          - keycloak.lagoon.{{ .Hostname }} */}}

webhookHandler:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: webhookhandler.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: webhookhandler-tls
        hosts:
          - webhookhandler.lagoon.{{ .Hostname }} */}}

ui:
  replicaCount: 1
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: ui.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: ui-tls
        hosts:
          - ui.lagoon.{{ .Hostname }} */}}

backupHandler:
  enabled: false
  replicaCount: 1
  {{/* ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - host: backuphandler.lagoon.{{ .Hostname }}
      paths:
      - /
    tls:
      - secretName: backuphandler-tls
        hosts:
          - backuphandler.lagoon.{{ .Hostname }} */}}

drushAlias:
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: drushalias.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: drushalias-tls
        hosts:
          - drushalias.lagoon.{{ .Hostname }} */}}

nats:
  enabled: false
  replicaCount: 1

ssh:
  replicaCount: 1
  service:
    type: LoadBalancer
    port: 22

sshPortalAPI:
  enabled: false
  replicaCount: 1
  serviceMonitor:
    enabled: false

sshToken:
  enabled: false
  replicaCount: 1

broker:
  replicaCount: 1
  {{- if eq .Arch "arm64" }}
  image:
    repository: ghcr.io/salsadigitalauorg/rockpool/lagoon/broker
  {{- end }}
  resources:
    requests:
      memory: "256Mi"
      cpu: "1000m"
    limits:
      memory: "512Mi"
      cpu: "1500m"
  service:
    amqpExternal:
      enabled: true
  serviceMonitor:
    enabled: false
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: broker.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: broker-tls
        hosts:
          - broker.lagoon.{{ .Hostname }} */}}

authServer:
  replicaCount: 1

webhooks2tasks:
  replicaCount: 1

actionsHandler:
  replicaCount: 1

webhookHandler:
  replicaCount: 1
  ingress:
    enabled: true
    {{/* annotations:
      kubernetes.io/tls-acme: "true" */}}
    hosts:
    - host: webhookhandler.lagoon.{{ .Hostname }}
      paths:
      - /
    {{/* tls:
      - secretName: webhookhandler-tls
        hosts:
          - webhookhandler.lagoon.{{ .Hostname }} */}}

autoIdler:
  enabled: false

storageCalculator:
  enabled: false

logs2webhook:
  replicaCount: 1

drushAlias:
  replicaCount: 1
  image:
    tag: "v3.1.0"

controllerhandler:
  enabled: false
  replicaCount: 1

workflows:
  replicaCount: 1

logs2slack:
  enabled: false
logs2microsoftteams:
  enabled: false
logs2rocketchat:
  enabled: false
logs2email:
  enabled: false
logs2s3:
  enabled: false
