apiVersion: v1
kind: Namespace
metadata:
  name: gitlab

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: gitlab
spec:
  rules:
    - host: gitlab.lagoon.{{ .Hostname }}
      http:
        paths:
          - backend:
              serviceName: gitlab
              servicePort: 80
            path: /

---
apiVersion: v1
kind: Service
metadata:
  name: gitlab
spec:
  ports:
    - port: 80
  selector:
    app: gitlab

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 50Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
spec:
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      containers:
      - name: gitlab
        {{- if eq .Arch "arm64" }}
        image: yrzr/gitlab-ce-arm64v8:latest
        {{- else }}
        image: gitlab/gitlab-ce:latest
        {{- end }}
        resources:
          requests:
            memory: "512Mi"
            cpu: "1000m"
          limits:
            memory: "1024Mi"
            cpu: "1500m"
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 22
        volumeMounts:
        - mountPath: /etc/gitlab
          name: data
          subPath: config
        - mountPath: /var/log/gitlab
          name: data
          subPath: logs
        - mountPath: /var/opt/gitlab
          name: data
          subPath: data
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: |
            external_url 'http://gitlab.{{ .Hostname }}'
            puma['worker_processes'] = 0
            sidekiq['max_concurrency'] = 10
            prometheus_monitoring['enable'] = false

            gitlab_rails['env'] = {
              'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
            }

            gitaly['concurrency'] = [
              {
                'rpc' => "/gitaly.SmartHTTPService/PostReceivePack",
                'max_per_repo' => 3
              }, {
                'rpc' => "/gitaly.SSHService/SSHUploadPack",
                'max_per_repo' => 3
              }
            ]
            gitaly['env'] = {
              'LD_PRELOAD' => '/opt/gitlab/embedded/lib/libjemalloc.so',
              'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000',
              'GITALY_COMMAND_SPAWN_MAX_PARALLEL' => '2'
            }

            nginx['redirect_http_to_https'] = false
            letsencrypt['enable'] = false
            grafana['enable'] = false
            alertmanager['enable'] = false
        {{/* livenessProbe:
          httpGet:
            path: /help
            port: 80
          failureThreshold: 5
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /help
            port: 80
          failureThreshold: 30
          periodSeconds: 10 */}}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: gitlab-data
